//
//  SignInVc.swift
//  pointerup-customer
//
//  Created by apzzo on 07/10/24.
//

import SwiftUI

struct SignInVc: View {
    
    var body: some View {
        NavigationView {
            ZStack{
                SignInReuseView(authenticationTitle: "Sign in to your \nAccount", loginDescription: "Enter your email and password to log in")
                VStack{
                    LoginView()
                    SignUpAgreementView()
                }
                .padding(.top, 80)
            }
            .navigationBarHidden(true)
        }
    }
}

#Preview {
    SignInVc()
}

struct SignInReuseView: View {
    let authenticationTitle: String
    let loginDescription: String
    
    var body: some View {
        ZStack{
            VStack(spacing: 0) {
                Image("LoginBg")
                    .resizable()
                    .scaledToFill()
                    .frame(maxWidth: .infinity, maxHeight: 420)
                    .clipped()
                Color(hex: "F6F8FA")
            }
            .ignoresSafeArea()
            
            VStack(alignment: .center) {
                Image("pointerLogo")
                    .resizable()
                    .scaledToFit()
                    .frame(width: 200, height: 60)
                    .padding(5)
                
                Text(authenticationTitle)
                    .font(.system(size: 32, weight: .bold))
                    .multilineTextAlignment(.center)
                    .foregroundColor(Color(hex: "FFFFFF"))
                    .lineLimit(2)
                    .padding(.bottom, 10)
                
                Text(loginDescription)
                    .font(.system(size: 12, weight: .medium))
                    .multilineTextAlignment(.center)
                    .foregroundColor(Color(hex: "FFFFFF"))
                    .padding(.horizontal, 20)
                    .lineLimit(2)
                Spacer()
            }
            .padding(.top, 5)
        }
    }
}

struct LoginView: View {
    @State private var email: String = ""
    @State private var password: String = ""
    @State private var isPasswordVisible: Bool = false
    
    var body: some View {
        
        ZStack {
            RoundedRectangle(cornerRadius: 10)
                .frame(height: 350)
                .foregroundColor(.white)
                .padding()
                .padding(.horizontal, 20)
            
            
            VStack {
                VStack(alignment: .leading) {
                    
                    Text("Email")
                        .font(.system(size: 12, weight: .medium))
                        .foregroundStyle(Color(hex: "6C7278"))
                        .padding(.horizontal, 33)
                    
                    TextField("Email", text: $email)
                        .padding(.vertical, 10)
                        .padding(.horizontal)
                        .keyboardType(.emailAddress)
                        .autocapitalization(.none)
                        .background(
                            RoundedRectangle(cornerRadius: 10)
                                .stroke(Color(hex: "6C7278").opacity(0.5), lineWidth: 1)
                        )
                        .padding(.horizontal, 30)
                }
                .padding(.bottom)
                
                
                VStack(alignment: .leading) {
                    Text("Password")
                        .font(.system(size: 12, weight: .medium))
                        .foregroundStyle(Color(hex: "6C7278"))
                        .padding(.horizontal, 33)
                    
                    ZStack {
                        if isPasswordVisible {
                            TextField("Password", text: $password)
                        } else {
                            SecureField("Password", text: $password)
                        }
                        
                        HStack {
                            Spacer()
                            Button(action: {
                                isPasswordVisible.toggle()
                            }) {
                                Image(systemName: isPasswordVisible ? "eye.slash.fill" : "eye.fill")
                                    .foregroundColor(Color.gray)
                            }
                            .padding(.trailing, 10)
                        }
                    }
                    .padding(.vertical, 10)
                    .padding(.horizontal)
                    .background(
                        RoundedRectangle(cornerRadius: 10)
                            .stroke(Color(hex: "6C7278").opacity(0.5), lineWidth: 1)
                    )
                    .padding(.horizontal, 30)
                }
                
                HStack {
                    Spacer()
                    Button(action: {
                        print("Forgot Password cliked")
                    }) {
                        Text("Forgot Password?")
                            .font(.system(size: 12, weight: .semibold))
                            .foregroundColor(Color(hex: "4D81E7"))
                    }
                }
                .padding(.horizontal, 30)
                .padding(.vertical, 10)
                .padding(.bottom, 3)
                
                NavigationLink(destination: RecoveryCodeVc()) {
                    Text("Log In")
                        .font(.system(size: 18, weight: .bold))
                        .foregroundColor(.white)
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color(hex: "31AD83"))
                        .cornerRadius(10)
                }
                .padding(.horizontal, 30)
                
                
                HStack {
                    Text("Donâ€™t have an account?")
                        .font(.system(size: 12, weight: .medium))
                        .foregroundColor(Color(hex: "6C7278"))
                    Button(action: {
                        print("Contact Admin cliked")
                    }) {
                        Text("Contact Admin")
                            .font(.system(size: 12, weight: .semibold))
                            .foregroundColor(Color(hex: "4D81E7"))
                    }
                }
                .padding(.horizontal, 30)
                .padding(.top)
            }
            .padding(.horizontal, 25)
        }
        .shadow(radius: 0.2)
    }
}

struct SignUpAgreementView: View {
    
    var body: some View {
        
        VStack(spacing: 5) {
            HStack(spacing: 3){
                Text("By signing up, you agree to the")
                    .font(.system(size: 12, weight: .medium))
                    .foregroundColor(Color(hex: "6C7278"))
                Button(action: {
                    print("Terms of Service tapped")
                }) {
                    Text("Terms of Service ")
                        .font(.system(size: 12, weight: .semibold))
                        .foregroundColor(Color.black)
                        .underline()
                }
                Text("and")
                    .font(.system(size: 12, weight: .medium))
                    .foregroundColor(Color(hex: "6C7278"))
            }
            Button(action: {
                print("Data Processing Agreement tapped")
            }) {
                Text("Data Processing Agreement")
                    .font(.system(size: 12, weight: .semibold))
                    .foregroundColor(Color.black)
                    .underline()
            }
        }
        
    }
}
