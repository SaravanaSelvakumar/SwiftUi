import SwiftUI

struct LoginView: View {
    @State private var email: String = ""
    @State private var password: String = ""
    @State private var isPasswordVisible: Bool = false
    
    var body: some View {
        VStack {
            Spacer()
                .frame(height: 50) // Adjust height as necessary
            
            // App Logo
            Image(systemName: "bag.fill") // Placeholder for the app icon
                .font(.largeTitle)
                .foregroundColor(Color.green)
                .padding(.bottom, 10)
            
            Text("PointerUp")
                .font(.system(size: 32, weight: .bold))
                .foregroundColor(Color.green)
                .padding(.bottom, 20)
            
            // Sign-in Title
            Text("Sign in to your Account")
                .font(.system(size: 24, weight: .bold))
                .padding(.bottom, 10)
            
            // Subtitle
            Text("Enter your email and password to log in")
                .font(.system(size: 16))
                .foregroundColor(Color.gray)
                .padding(.bottom, 30)
            
            // Email Field
            TextField("Email", text: $email)
                .padding()
                .background(Color(UIColor.systemGray6))
                .cornerRadius(10)
                .keyboardType(.emailAddress)
                .autocapitalization(.none)
                .padding(.horizontal, 30)
            
            // Password Field
            ZStack {
                if isPasswordVisible {
                    TextField("Password", text: $password)
                } else {
                    SecureField("Password", text: $password)
                }
                
                HStack {
                    Spacer()
                    Button(action: {
                        isPasswordVisible.toggle()
                    }) {
                        Image(systemName: isPasswordVisible ? "eye.slash.fill" : "eye.fill")
                            .foregroundColor(Color.gray)
                    }
                    .padding(.trailing, 20)
                }
            }
            .padding()
            .background(Color(UIColor.systemGray6))
            .cornerRadius(10)
            .padding(.horizontal, 30)
            .padding(.bottom, 10)
            
            // Forgot Password
            HStack {
                Spacer()
                Button(action: {
                    // Add Forgot Password Action
                }) {
                    Text("Forgot Password?")
                        .font(.system(size: 14))
                        .foregroundColor(Color.blue)
                }
            }
            .padding(.horizontal, 30)
            .padding(.bottom, 20)
            
            // Log In Button
            Button(action: {
                // Add Log In Action
            }) {
                Text("Log In")
                    .font(.system(size: 18, weight: .bold))
                    .foregroundColor(.white)
                    .padding()
                    .frame(maxWidth: .infinity)
                    .background(Color.green)
                    .cornerRadius(10)
            }
            .padding(.horizontal, 30)
            
            // Don't have an account + Contact Admin
            HStack {
                Text("Don't have an account?")
                    .font(.system(size: 14))
                
                Button(action: {
                    // Add Contact Admin Action
                }) {
                    Text("Contact Admin")
                        .font(.system(size: 14))
                        .foregroundColor(Color.blue)
                }
            }
            .padding(.top, 20)
            
            Spacer()
            
            // Terms of Service and Data Processing Agreement
            Text("By signing up, you agree to the Terms of Service and Data Processing Agreement")
                .font(.system(size: 12))
                .foregroundColor(Color.gray)
                .multilineTextAlignment(.center)
                .padding(.horizontal, 20)
                .padding(.bottom, 20)
        }
        .background(Color.white.edgesIgnoringSafeArea(.all))
    }
}
